generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Legends {
  id               Int    @id @default(autoincrement())
  avatar           String @unique @db.VarChar
  name             String @unique @db.VarChar
  status_id        Int?
  weapon_primary   Int?
  weapon_secondary Int?
  lore             Int?
  prince           Float  @db.Real
}

model Lore {
  id         Int      @id @default(autoincrement())
  paragraphs String[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model Status {
  id    Int @id @default(autoincrement())
  force Int
  dex   Int
  def   Int
  spd   Int
}

model Weapons {
  id     Int    @id @default(autoincrement())
  icon   String @unique @db.VarChar
  weapon String @unique @db.VarChar
}

model code_profiles {
  user_name     String  @id @db.VarChar
  url_profile   String  @db.VarChar
  name          String  @db.VarChar
  bio           String
  profile_link  String  @db.VarChar
  posts_numbers Int
  posts         posts[]
}

model game {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar
  cover_url String   @unique @map("cover-url") @db.VarChar
  desc      String   @unique
  price     String   @db.VarChar
  genders   String[] @db.VarChar
}

model posts {
  id               Int            @id @default(autoincrement())
  url_cover        String         @db.VarChar
  title            String         @db.VarChar
  link             String         @db.VarChar
  code_profiles_id String?        @db.VarChar
  code_profiles    code_profiles? @relation(fields: [code_profiles_id], references: [user_name], onDelete: NoAction, onUpdate: NoAction)
}
